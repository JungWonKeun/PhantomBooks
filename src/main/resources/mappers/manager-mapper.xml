<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="phantom.books.finalProject.admin.mapper.ManagerMapper">

	<select id="countBookList" resultType ="_int">
		SELECT
			COUNT(*)
		FROM BOOK
	</select>

	<select id="bookList" resultType="Book">
		<choose>
			<when test="sort == 'all'">
			SELECT
				 BOOK_NO,
				 BOOK_TITLE,
				 BOOK_CONTENT,
				 BOOK_COVER,
				 BOOK_WRITER,
				 COMPANY_NAME,
				 BOOK_TALT,
				 BOOK_PRICE,
				 BOOK_PAGE_COUNT,
				 BOOK_YN,
				 TO_CHAR(INSERT_DATE, 'YYYY"년"MM"월"DD"일"') AS INSERT_DATE,
				 TO_CHAR(BOOK_DATE, 'YYYY"년" MM"월" DD"일"') AS BOOK_DATE, 
				 CURRENT_COUNT,
				 BASIC_COUNT,
				 PREFERENCE_NO,
				 CATEGORY_NO,
				 EMAIL,
				 NVL(MAX(REQUEST_PRICE), (BOOK_PRICE * 0.6)) AS REQUEST_PRICE
				FROM BOOK
				LEFT JOIN BOOK_PREFERENCE USING(BOOK_NO)
				LEFT JOIN BOOK_REQUEST USING (BOOK_NO)
				LEFT JOIN BOOK_CATEGORY USING(BOOK_NO)
				LEFT JOIN BOOK_MANAGER USING (BOOK_NO)
				LEFT JOIN COMPANY USING (COMPANY_NAME)
				GROUP BY BOOK_NO, BOOK_TITLE, BOOK_CONTENT, BOOK_COVER, BOOK_WRITER,
						 COMPANY_NAME, BOOK_TALT, BOOK_PRICE, BOOK_PAGE_COUNT, BOOK_YN,
						 BOOK_DATE, PREFERENCE_NO, CATEGORY_NO, INSERT_DATE, CURRENT_COUNT, BASIC_COUNT, EMAIL
				ORDER BY BOOK_NO DESC, COMPANY_NAME ASC, BOOK_YN, INSERT_DATE DESC
			</when>
			<when test="sort == 'company'">
			SELECT
				 BOOK_NO,
				 BOOK_TITLE,
				 BOOK_CONTENT,
				 BOOK_COVER,
				 BOOK_WRITER,
				 COMPANY_NAME,
				 BOOK_TALT,
				 BOOK_PRICE,
				 BOOK_PAGE_COUNT,
				 BOOK_YN,
				 TO_CHAR(INSERT_DATE, 'YYYY"년"MM"월"DD"일"') AS INSERT_DATE,
				 TO_CHAR(BOOK_DATE, 'YYYY"년" MM"월" DD"일"') AS BOOK_DATE, 
				 CURRENT_COUNT,
				 BASIC_COUNT,
				 PREFERENCE_NO,
				 CATEGORY_NO,
				 EMAIL,
				 NVL(MAX(REQUEST_PRICE), (BOOK_PRICE * 0.6)) AS REQUEST_PRICE
				FROM BOOK
				LEFT JOIN BOOK_PREFERENCE USING(BOOK_NO)
				LEFT JOIN BOOK_REQUEST USING (BOOK_NO)
				LEFT JOIN BOOK_CATEGORY USING(BOOK_NO)
				LEFT JOIN BOOK_MANAGER USING (BOOK_NO)
				LEFT JOIN COMPANY USING (COMPANY_NAME)
				WHERE COMPANY_NAME LIKE '%'|| #{text} ||'%'
				GROUP BY BOOK_NO, BOOK_TITLE, BOOK_CONTENT, BOOK_COVER, BOOK_WRITER,
						 COMPANY_NAME, BOOK_TALT, BOOK_PRICE, BOOK_PAGE_COUNT, BOOK_YN,
						 BOOK_DATE, PREFERENCE_NO, CATEGORY_NO, INSERT_DATE, CURRENT_COUNT, BASIC_COUNT, EMAIL
				ORDER BY COMPANY_NAME ASC, BOOK_YN, INSERT_DATE DESC
			</when>
			<when test="sort == 'title'">
						SELECT
				 BOOK_NO,
				 BOOK_TITLE,
				 BOOK_CONTENT,
				 BOOK_COVER,
				 BOOK_WRITER,
				 COMPANY_NAME,
				 BOOK_TALT,
				 BOOK_PRICE,
				 BOOK_PAGE_COUNT,
				 BOOK_YN,
				 TO_CHAR(INSERT_DATE, 'YYYY"년"MM"월"DD"일"') AS INSERT_DATE,
				 TO_CHAR(BOOK_DATE, 'YYYY"년" MM"월" DD"일"') AS BOOK_DATE, 
				 CURRENT_COUNT,
				 BASIC_COUNT,
				 PREFERENCE_NO,
				 CATEGORY_NO,
				 EMAIL,
				 NVL(MAX(REQUEST_PRICE), (BOOK_PRICE * 0.6)) AS REQUEST_PRICE
				FROM BOOK
				LEFT JOIN BOOK_PREFERENCE USING(BOOK_NO)
				LEFT JOIN BOOK_REQUEST USING (BOOK_NO)
				LEFT JOIN BOOK_CATEGORY USING(BOOK_NO)
				LEFT JOIN BOOK_MANAGER USING (BOOK_NO)
				LEFT JOIN COMPANY USING (COMPANY_NAME)
				WHERE BOOK_TITLE LIKE '%'||#{text}||'%'
				GROUP BY BOOK_NO, BOOK_TITLE, BOOK_CONTENT, BOOK_COVER, BOOK_WRITER,
						 COMPANY_NAME, BOOK_TALT, BOOK_PRICE, BOOK_PAGE_COUNT, BOOK_YN,
						 BOOK_DATE, PREFERENCE_NO, CATEGORY_NO, INSERT_DATE, CURRENT_COUNT, BASIC_COUNT, EMAIL
				ORDER BY BOOK_NO DESC, COMPANY_NAME ASC, BOOK_YN, INSERT_DATE DESC
			</when>
		</choose>
				
	</select>
	
	
	<update id="insert">
		UPDATE "BOOK"
		SET 
			BOOK_YN = DECODE(BOOK_YN, 'Y', 'N', 'Y'),
			INSERT_DATE = CURRENT_DATE
		WHERE BOOK_NO = #{bookNo}
	</update>
	
	<select id="chartData" resultType="ChartBook">
	<choose>
			<when test="sort == 'all'">
			SELECT
				NVL(CURRENT_COUNT,0) AS COUNT_BOOK,
				BOOK_TITLE
			FROM BOOK
			LEFT JOIN BOOK_MANAGER USING (BOOK_NO)
			ORDER BY BOOK_NO DESC, COMPANY_NAME ASC, BOOK_YN, INSERT_DATE DESC
			</when>
			<when test="sort == 'company'">
			SELECT
				NVL(CURRENT_COUNT,0) AS COUNT_BOOK,
				BOOK_TITLE
			FROM BOOK
			LEFT JOIN BOOK_MANAGER USING (BOOK_NO)
			WHERE COMPANY_NAME LIKE '%'|| #{text} ||'%'
			ORDER BY COMPANY_NAME ASC, BOOK_YN, INSERT_DATE DESC
			</when>
			<when test="sort == 'title'">
			SELECT
				NVL(CURRENT_COUNT,0) AS COUNT_BOOK,
				BOOK_TITLE
			FROM BOOK
			LEFT JOIN BOOK_MANAGER USING (BOOK_NO)
			WHERE BOOK_TITLE LIKE '%'||#{text}||'%'
			ORDER BY BOOK_NO DESC, COMPANY_NAME ASC, BOOK_YN, INSERT_DATE DESC
			</when>
		</choose>
	</select>
	
	


	
</mapper>
