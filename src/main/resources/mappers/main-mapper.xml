<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mubatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper	namespace="phantom.books.finalProject.main.mapper.MainMapper">

	<!-- 오늘의 책 추천 -->
	<select id="todayBooks" resultType="Book">
		WITH TEMP_TABLE AS (
        SELECT 
            BOOK_NO, 
            CATEGORY_NO, 
            COUNT(*) AS SELL_COUNT
        FROM "ORDER"
        JOIN ORDER_LIST USING (ORDER_NO)
        JOIN BOOK USING (BOOK_NO)
        JOIN BOOK_CATEGORY USING (BOOK_NO)
        JOIN CATEGORY USING (CATEGORY_NO)
        WHERE TRUNC(ORDER_DATE) = TRUNC(TO_DATE('2024-12-04'))
        GROUP BY BOOK_NO, CATEGORY_NO
    )
    SELECT 
        MAIN.BOOK_NO,
        BOOK_TITLE,
        BOOK_COVER,
        BOOK_WRITER,
        COMPANY_NAME,
        BOOK_PRICE,
        SCORE_AVG, 
        (
            SELECT
                LISTAGG(CATEGORY_NAME, ',') WITHIN GROUP (ORDER BY CT.CATEGORY_NO)
            FROM BOOK SUB
            JOIN BOOK_CATEGORY BCT ON (SUB.BOOK_NO = BCT.BOOK_NO)
            JOIN CATEGORY CT ON (BCT.CATEGORY_NO = CT.CATEGORY_NO)
            WHERE SUB.BOOK_NO = MAIN.BOOK_NO
        ) AS CATEGORY_NAME
    FROM (
        SELECT 
            DISTINCT BOOK_NO 
        FROM TEMP_TABLE
        WHERE (CATEGORY_NO, SELL_COUNT) IN (
            SELECT 
                CATEGORY_NO, 
                MAX(SELL_COUNT)
            FROM TEMP_TABLE
            GROUP BY CATEGORY_NO
        )
    ) MAIN
    JOIN BOOK ON BOOK.BOOK_NO = MAIN.BOOK_NO
	</select>

	<!-- 베스트셀러 TOP 5 -->
	<select id="getBestsellerBooks" resultType="Book">
		SELECT
		b.BOOK_NO,
		b.BOOK_TITLE,
		b.BOOK_COVER,
		b.BOOK_WRITER,
		b.BOOK_PRICE,
		b.SCORE_AVG,
		b.COMPANY_NAME,
		(
			SELECT
				LISTAGG(CATEGORY_NAME, ',') WITHIN GROUP (ORDER BY CT.CATEGORY_NO)
			FROM BOOK SUB
			JOIN BOOK_CATEGORY BCT ON (SUB.BOOK_NO = BCT.BOOK_NO)
			JOIN CATEGORY CT ON (BCT.CATEGORY_NO = CT.CATEGORY_NO)
			WHERE SUB.BOOK_NO = b.BOOK_NO
		) AS CATEGORY_NAME,
		COUNT(o.ORDER_NO) AS TOTAL_COUNT
		FROM BOOK b
		JOIN ORDER_LIST o ON b.BOOK_NO = o.BOOK_NO
		GROUP BY
		b.BOOK_NO,
		b.BOOK_TITLE,
		b.BOOK_COVER,
		b.BOOK_WRITER,
		b.BOOK_PRICE,
		b.SCORE_AVG,
		b.COMPANY_NAME
		ORDER BY COUNT(o.ORDER_NO) DESC
		FETCH FIRST 5 ROWS ONLY
	</select>

	<!-- 구매 이력 조회 -->
	<select id="getBoughtBooks" parameterType="int"
		resultType="Book">
		SELECT
		b.BOOK_NO,
		b.BOOK_TITLE,
		b.BOOK_COVER,
		b.BOOK_WRITER,
		b.BOOK_PRICE,
		ol.BOOK_COUNT,
		o.ORDER_DATE
		FROM ORDER_LIST ol
		JOIN "ORDER" o ON ol.ORDER_NO = o.ORDER_NO
		JOIN BOOK b ON ol.BOOK_NO = b.BOOK_NO
		WHERE o.MEMBER_NO = #{memberNo}
		ORDER BY o.ORDER_DATE DESC
	</select>


	<!-- 취향별 책 추천 -->
<select id="getMyTypeBooks" parameterType="int" resultType="Book">
    WITH RANKED_BOOKS AS (
        SELECT DISTINCT
            B.BOOK_NO,
            B.BOOK_TITLE,
            B.BOOK_COVER,
            B.BOOK_WRITER,
            B.BOOK_PRICE,
            B.SCORE_AVG,
            B.COMPANY_NAME,
            (
                SELECT
                    LISTAGG(CATEGORY_NAME, ',') WITHIN GROUP (ORDER BY CT.CATEGORY_NO)
                FROM BOOK SUB
                JOIN BOOK_CATEGORY BCT ON (SUB.BOOK_NO = BCT.BOOK_NO)
                JOIN CATEGORY CT ON (BCT.CATEGORY_NO = CT.CATEGORY_NO)
                WHERE SUB.BOOK_NO = B.BOOK_NO
            ) AS CATEGORY_NAME,
            COUNT(DISTINCT C.CATEGORY_NO) AS MATCH_COUNT
        FROM BOOK B
        JOIN BOOK_CATEGORY BC ON B.BOOK_NO = BC.BOOK_NO
        JOIN CATEGORY C ON BC.CATEGORY_NO = C.CATEGORY_NO
        WHERE EXISTS (
            -- 사용자가 선택한 카테고리와 매칭
            SELECT 1 
            FROM MEMBER_CATEGORY MC 
            WHERE MC.MEMBER_NO = #{memberNo}
            AND MC.CATEGORY_NO = C.CATEGORY_NO
        ) OR EXISTS (
            -- 사용자의 취향 설정과 매칭
            SELECT 1 
            FROM MEMBER_PREFERENCE MP 
            WHERE MP.MEMBER_NO = #{memberNo}
            AND MP.PREFERENCE_NO IN (
                SELECT PREFERENCE_NO 
                FROM BOOK_PREFERENCE 
                WHERE BOOK_NO = B.BOOK_NO
            )
        )
        GROUP BY 
            B.BOOK_NO,
            B.BOOK_TITLE,
            B.BOOK_COVER,
            B.BOOK_WRITER,
            B.BOOK_PRICE,
            B.SCORE_AVG,
            B.COMPANY_NAME
    )
    SELECT *
    FROM RANKED_BOOKS
    ORDER BY 
        MATCH_COUNT DESC,  -- 매칭 개수가 많은 순
        SCORE_AVG DESC,    -- 평점 높은 순
        BOOK_NO ASC       -- 최신 도서 순
    FETCH FIRST 15 ROWS ONLY
</select>
</mapper>
