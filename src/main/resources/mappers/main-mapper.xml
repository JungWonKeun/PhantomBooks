<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mubatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper	namespace="phantom.books.finalProject.main.mapper.MainMapper">

	<!-- 오늘의 책 추천 -->
	<select id="todayBooks" resultType="Book">
		WITH TEMP_TABLE AS (
        SELECT 
            BOOK_NO, 
            CATEGORY_NO, 
            COUNT(*) AS SELL_COUNT
        FROM "ORDER"
        JOIN ORDER_LIST USING (ORDER_NO)
        JOIN BOOK USING (BOOK_NO)
        JOIN BOOK_CATEGORY USING (BOOK_NO)
        JOIN CATEGORY USING (CATEGORY_NO)
        WHERE TRUNC(ORDER_DATE) = TRUNC(TO_DATE('2024-11-29'))
        GROUP BY BOOK_NO, CATEGORY_NO
    )
    SELECT 
        MAIN.BOOK_NO,
        BOOK_TITLE,
        BOOK_COVER,
        BOOK_WRITER,
        COMPANY_NAME,
        BOOK_PRICE,
        SCORE_AVG, 
        (
            SELECT
                LISTAGG(CATEGORY_NAME, ',') WITHIN GROUP (ORDER BY CT.CATEGORY_NO)
            FROM BOOK SUB
            JOIN BOOK_CATEGORY BCT ON (SUB.BOOK_NO = BCT.BOOK_NO)
            JOIN CATEGORY CT ON (BCT.CATEGORY_NO = CT.CATEGORY_NO)
            WHERE SUB.BOOK_NO = MAIN.BOOK_NO
        ) AS CATEGORY_NAME
    FROM (
        SELECT 
            DISTINCT BOOK_NO 
        FROM TEMP_TABLE
        WHERE (CATEGORY_NO, SELL_COUNT) IN (
            SELECT 
                CATEGORY_NO, 
                MAX(SELL_COUNT)
            FROM TEMP_TABLE
            GROUP BY CATEGORY_NO
        )
    ) MAIN
    JOIN BOOK ON BOOK.BOOK_NO = MAIN.BOOK_NO
	</select>

	<!-- 일간 베스트셀러 -->
	<select id="getBestsellerBooks" parameterType = "int" resultType="Book">
    SELECT 
        b.BOOK_NO,
        b.BOOK_TITLE,
        COUNT(o.ORDER_NO) AS TOTAL_COUNT
    FROM 
        ORDER_LIST o
    JOIN 
        BOOK b ON o.BOOK_NO = b.BOOK_NO
    WHERE 
        o.MEMBER_NO = #{memberNo}
    GROUP BY 
        b.BOOK_NO, b.BOOK_TITLE
    ORDER BY 
        TOTAL_COUNT DESC
    LIMIT 1
	</select>
	
	<!-- 구매한 책 리스트 가져오기 -->
	<select id="getBoughtBooks" parameterType="int" resultType="OrderBookDto">
    SELECT 
        b.BOOK_NO,
        b.BOOK_TITLE,
        o.ORDER_DATE,
        o.BOOK_COUNT
    FROM 
        ORDER_LIST o
    JOIN 
        BOOK b ON o.BOOK_NO = b.BOOK_NO
    WHERE 
        o.MEMBER_NO = #{memberNo}
    ORDER BY 
        o.ORDER_DATE DESC
	</select>


	<!-- 취향별 책 추천 -->
	<select id="getMyTypeBooks" parameterType="int"
		resultType="Book">
		SELECT DISTINCT
		B.BOOK_NO,
		B.BOOK_TITLE,
		B.BOOK_COVER,
		B.BOOK_WRITER,
		B.BOOK_PRICE,
		B.SCORE_AVG
		FROM BOOK B
		JOIN BOOK_CATEGORY BC ON B.BOOK_NO = BC.BOOK_NO
		JOIN CATEGORY C ON BC.CATEGORY_NO = C.CATEGORY_NO
		WHERE EXISTS (
		SELECT 1
		FROM MEMBER_CATEGORY MC
		WHERE MC.MEMBER_NO = #{memberNo}
		AND MC.CATEGORY_NO = C.CATEGORY_NO
		)
		AND EXISTS (
		SELECT 1
		FROM MEMBER_PREFERENCE MP
		WHERE MP.MEMBER_NO = #{memberNo}
		)
		ORDER BY B.SCORE_AVG DESC
		FETCH FIRST 10 ROWS ONLY
	</select>

	
</mapper>
